{"name": "test_vwo_login_positive", "status": "broken", "statusDetails": {"message": "seleniumpagefactory.Pagefactory.ElementNotFoundException: An exception of type TimeoutException occurred. With Element -: username_logged_in - locator: (xpath, //span[@data-qa='lufexuloga'])", "trace": "self = <tests.pageObjects.page_factory.dashboardPage_pf.DashboardPage object at 0x000002611EB79580>, loc = 'username_logged_in'\n\n    def __getattr__(self, loc):\n    \n        if self.mobile_test == True:\n            if loc in self.locators.keys():\n                element = self.find_element_by_accessibility_id(self.locators[loc][1])\n                return element\n        else:\n            if loc in self.locators.keys():\n                locator = (self.TYPE_OF_LOCATORS[self.locators[loc][0].lower()], self.locators[loc][1])\n                try:\n>                   element = WebDriverWait(self.driver, self.timeout).until(\n                        EC.presence_of_element_located(locator)\n                    )\n\n.venv\\Lib\\site-packages\\seleniumpagefactory\\Pagefactory.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9cbe2877a39f931c351f2d6f864db440\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002611EA69620>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7CBC41F52+60322]\nE       \t(No symbol) [0x00007FF7CBBBCEC9]\nE       \t(No symbol) [0x00007FF7CBA77EBA]\nE       \t(No symbol) [0x00007FF7CBAC7676]\nE       \t(No symbol) [0x00007FF7CBAC773C]\nE       \t(No symbol) [0x00007FF7CBB0E967]\nE       \t(No symbol) [0x00007FF7CBAEC25F]\nE       \t(No symbol) [0x00007FF7CBB0BC80]\nE       \t(No symbol) [0x00007FF7CBAEBFC3]\nE       \t(No symbol) [0x00007FF7CBAB9617]\nE       \t(No symbol) [0x00007FF7CBABA211]\nE       \tGetHandleVerifier [0x00007FF7CBF594AD+3301629]\nE       \tGetHandleVerifier [0x00007FF7CBFA36D3+3605283]\nE       \tGetHandleVerifier [0x00007FF7CBF99450+3563680]\nE       \tGetHandleVerifier [0x00007FF7CBCF4326+790390]\nE       \t(No symbol) [0x00007FF7CBBC750F]\nE       \t(No symbol) [0x00007FF7CBBC3404]\nE       \t(No symbol) [0x00007FF7CBBC3592]\nE       \t(No symbol) [0x00007FF7CBBB2F9F]\nE       \tBaseThreadInitThunk [0x00007FFA8880257D+29]\nE       \tRtlUserThreadStart [0x00007FFA8AA8AF28+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.vwoLoginTests.test_vwo_login_pf.TestVWOLogin object at 0x000002611EA93500>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9cbe2877a39f931c351f2d6f864db440\")>\n\n    @pytest.mark.usefixtures(\"setup\")\n    @pytest.mark.qa\n    def test_vwo_login_positive(self, setup):\n        LOGGER = logging.getLogger(__name__)\n        LOGGER.info(\"Starting the Testcase\")\n        driver = setup\n        driver.get(Constants.app_url())\n        login_page = LoginPage(driver)\n        login_page.login_to_vwo(user=self.username, pwd=self.password)\n        dashboard_page = DashboardPage(driver)\n>       username = dashboard_page.user_logged_in_text()\n\ntests\\vwoLoginTests\\test_vwo_login_pf.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\pageObjects\\page_factory\\dashboardPage_pf.py:19: in user_logged_in_text\n    return self.username_logged_in.get_text()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tests.pageObjects.page_factory.dashboardPage_pf.DashboardPage object at 0x000002611EB79580>, loc = 'username_logged_in'\n\n    def __getattr__(self, loc):\n    \n        if self.mobile_test == True:\n            if loc in self.locators.keys():\n                element = self.find_element_by_accessibility_id(self.locators[loc][1])\n                return element\n        else:\n            if loc in self.locators.keys():\n                locator = (self.TYPE_OF_LOCATORS[self.locators[loc][0].lower()], self.locators[loc][1])\n                try:\n                    element = WebDriverWait(self.driver, self.timeout).until(\n                        EC.presence_of_element_located(locator)\n                    )\n                except (StaleElementReferenceException, NoSuchElementException, TimeoutException) as e:\n>                   raise ElementNotFoundException(\n                        \"An exception of type \" + type(e).__name__ +\n                        \" occurred. With Element -: \" + loc +\n                        \" - locator: (\" + locator[0] + \", \" + locator[1] + \")\"\n                    )\nE                   seleniumpagefactory.Pagefactory.ElementNotFoundException: An exception of type TimeoutException occurred. With Element -: username_logged_in - locator: (xpath, //span[@data-qa='lufexuloga'])\n\n.venv\\Lib\\site-packages\\seleniumpagefactory\\Pagefactory.py:62: ElementNotFoundException"}, "start": 1727103283293, "stop": 1727103297243, "uuid": "8f96c474-97b0-4c94-934d-00812dc2cf87", "historyId": "326e7eca156a4090563b3b4a14c1be9e", "testCaseId": "326e7eca156a4090563b3b4a14c1be9e", "fullName": "tests.vwoLoginTests.test_vwo_login_pf.TestVWOLogin#test_vwo_login_positive", "labels": [{"name": "epic", "value": "VWO App"}, {"name": "feature", "value": "Login Test"}, {"name": "tag", "value": "qa"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests.vwoLoginTests"}, {"name": "suite", "value": "test_vwo_login_pf"}, {"name": "subSuite", "value": "TestVWOLogin"}, {"name": "host", "value": "LAPTOP-BELRSIMA"}, {"name": "thread", "value": "4300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vwoLoginTests.test_vwo_login_pf"}]}